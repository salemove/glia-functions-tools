---
properties:
  id:
    type: string
    description: Engagement ID.
    example: 'abc12121-e888-43ae-99e0-07a676e9a111'

  account_id:
    type: string
    description: Account ID.
    example: 'abc12121-e888-43ae-99e0-07a676e9a111'

  leg_id:
    type: string
    description: Engagement leg ID.
    example: 'abc12121-c995-45ec-8e0f-5bf4d5e16a2e'

  engagement_type:
    type: string
    description: Engagement type.
    enum:
      - proactive
      - reactive
    example: 'reactive'

  operator_ids:
    type: array
    description: >
      An array of operator IDs (at least one) involved in an engagement.
    items:
      type: string
      example: 'def34343-e888-43ae-99e0-07a676e9a111'

  visitor_ids:
    type: array
    description: >
      An array of visitor IDs (at least one) involved in an engagement.
    items:
      type: string
      example: 'def34343-e888-43ae-99e0-07a676e9a111'

  request_type:
    type: string
    description: Request type that began the engagement leg.
    enum:
      - proactive
      - reactive
      - transfer
    example: transfer

  callback_used:
    type: boolean
    description: >
      Whether the engagement started from a callback request or not.
      Can be `true` only when `source` is `offline_phone`.
    example: false

  team_ids:
    type: array
    items:
      type: string
      example: 'ef74940e-1fd8-432c-964f-7f2d940fbd3a'
    description: IDs of teams involved in the engagements searched for.

  created_at:
    type: string
    description: |
      An ISO-8601 timestamp of when the engagement request was accepted and with that the engagement started.
    example: '2020-05-31T09:46:28Z'

  leg_start_time:
    type: string
    description: |
      An ISO-8601 timestamp of when the engagement leg started.
    example: '2020-05-31T09:46:28Z'

  requested_at:
    type: string
    description: |
      An ISO-8601 timestamp of when the engagement or transfer was requested.
    example: '2020-05-31T09:55:13Z'

  accepted_at:
    type: string
    description: |
      An ISO-8601 timestamp of when the transfer or engagement request was accepted and thus the engagement leg started.
    example: '2020-05-31T09:55:20Z'

  duration:
    type: integer
    description: |
      Engagement's duration in seconds. Is a sum of leg durations. Does not include queue wait times.
      The value is `null` for the ongoing engagement.
    example: 683

  leg_duration:
    type: integer
    description: |
      Engagement leg's duration in seconds. Does not include queue wait times. The value is `null` for the ongoing engagement leg.
    example: 423

  visitor_name:
    type: string
    description: Visitor's name.
    example: 'John Smith'

  visitor_browser:
    type: string
    description: Visitor's browser.
    example: 'Chrome'

  visitor_device_type:
    type: string
    description: Visitor's device type.
    enum:
      - mobile
      - computer
    example: 'mobile'

  visitor_engagement_phone_number:
    type: string
    nullable: true
    description: >
      Visitor's phone number with which the engagement started.
      The value is `null` in the case of engagements that were not started by phone.
    example: '+1555123454'

  glia_engagement_phone_number:
    type: string
    nullable: true
    description: >
      It can be the phone number dialled by the visitor or the phone number that was displayed on visitor's screen when they were called to start the engagement.

      The value is `null` in the case of engagements that were not started by phone.
    example: '+1555123456'

  visitor_id:
    type: string
    description: Visitor ID.
    example: 'c2c9106e-v888-47b2-8db3-089fb49dc9a5'

  cobrowsing_used:
    type: boolean
    description: Whether CoBrowsing was used or not.
    example: true

  video_used:
    type: boolean
    description: Whether video was used or not.
    example: true

  audio_used:
    type: boolean
    description: Whether audio was used or not.
    example: true

  flagged:
    type: boolean
    description: Whether the engagement has been flagged or not.
    example: false

  total_queue_wait_time:
    type: integer
    description: >
      The time visitor spent in queue before the engagement, in seconds.


      This value is present only for reactive engagements started via queueing. Does not include transfer queue wait
      times.
    example: 42

  leg_queue_wait_time:
    type: integer
    description: >
      Time spent in queue preceding this engagement leg (in seconds). The value is `null` if queues were not used.
    example: 3

  platform:
    type: string
    description: >
      The platform where the engagement was initiated.


      * `omnibrowse` - engagement was requested from Call Visualizer (either in Glia Hub or embedded in CRM),

      * `omnicore` - all other cases.
    enum:
      - omnibrowse
      - omnicore
    example: 'omnicore'

  audio_recording_urls:
    type: array
    items:
      type: string
      # yamllint disable rule:line-length
      example: >
        'https://api.glia.com/sub_engagements/1234567/conference_recordings/ar56789s-20df-4513-b8d4-b1aff1aa99c9.mp3'
      # yamllint enable rule:line-length
    description: |
      A list of audio recording URLs.

      * See [Audio recordings](https://docs.glia.com/glia-dev/reference/audio-recordings).
    deprecated: true

  audio_recordings:
    type: array
    description: |
      A list of audio recordings of the engagement.
      These recordings are ordered chronologically by the timestamp of `started_at` within each recording.

      * See [Audio recordings](https://docs.glia.com/glia-dev/reference/audio-recordings).
    items:
      type: object
      properties:
        create_download_url:
          type: string
          description: |
            URL to create the final download URL for this recording.
          # yamllint disable rule:line-length
          example: >
            'https://api.glia.com/sub_engagements/1234567/participant_recordings/ar56789s-20df-4513-b8d4-b1aff1aa99c9.mp3'
          # yamllint enable rule:line-length
        leg_id:
          type: string
          description: Engagement leg ID.
          example: 'abc12121-c995-45ec-8e0f-5bf4d5e16a2e'
        source:
          type: string
          description: |
            Source of the recording that determines how the audio of the call participants is stored.

              * `all` when all participants of the call were the source.
                * Recordings with this source are in mono-channel.
                * There can be multiple recordings of this type during an engagement. This can happen for example in the case of a transfer.
              * `visitor` when the visitor was the source of the recording.
                * Recordings with this source are in dual-channel, where the visitor's audio is in the left channel and the other participants' audio is in the right channel.
                * There can be multiple recordings of this type during an engagement. This can happen when the visitor navigates on the page or if there is a transfer.
                * When the visitor is put on hold, the recording will contain only hold music in the right channel.
          example: visitor
        started_at:
          type: string
          description: Timestamp of when the recording started.
          example: 2019-06-04T07:55:42Z
        state_updates:
          description: |
            State updates are ordered chronologically by the timestamp of `updated_at`.
          type: array
          items:
            type: object
            properties:
              state:
                type: string
                description: The state the recording was updated to.
                enum:
                  - recording
                  - paused
                  - stopped
                example: recording

              user_id:
                type: string
                nullable: true
                description: The user ID or site API key ID (in UUID v4 format) that updated the state of recording. Value is set to `null` if `user_type` is `system`.
                example: ec317122-e888-4b43-996d-34a2ed3b76d8

              user_type:
                type: string
                description: Type of the user that executed the action.
                enum:
                  - operator
                  - site_application
                  - system
                example: operator

              updated_at:
                type: string
                description: The time when the recording state update was applied.
                example: 2019-06-04T07:55:42.000000Z

            required:
              - state
              - user_id
              - user_type
              - updated_at

  from_start_time:
    type: string
    description: >
      Timestamp used to restrict search results of engagements.
      Engagements starting before this time will not be part of the
      search result.
    example: 2023-05-01T07:55:42

  to_start_time:
    type: string
    description: >
      Timestamp used to restrict search results of engagements.
      Engagements starting after this time will not be part of the
      search result. Must refer to a later time than `from_start_time`.
    example: 2023-05-31T07:55:42

  from_end_time:
    type: string
    description: >
      Timestamp used to restrict search results of engagements.
      Engagements ended before this time will not be part of the
      search result.
    example: 2023-05-30T07:55:42

  to_end_time:
    type: string
    description: >
      Timestamp used to restrict search results of engagements.
      Engagements ended after this time will not be part of the
      search result. Must refer to a later time than `from_end_time`.
    example: 2023-06-01T07:55:42

  include_ongoing:
    type: boolean
    description: >
      Whether ongoing engagements should be included in the search results. The default is `false`.
    example: false

  order_by:
    type: string
    description: >
      Specifies which engagement property to use for ordering the search results. By default, the engagements are ordered by the `start_time`.

      Use `order` to specify if the order of the results should be ascending or descending.
    enum:
      - start_time
      - queue_wait_time
      - duration
      - end_time
    example: 'start_time'

  order:
    type: string
    description: >
      Specifies whether the results should be sorted in ascending (`asc`) or descending (`desc`) order. By default,
      engagements are sorted by their start time in descending order.

      Use `order_by` to change the engagement property that is used for sorting.
    enum:
      - asc
      - desc
    example: 'desc'

  search_string:
    type: string
    description: >
      String used to search for engagements.

      The string is used to match any of the following: engagement ID, visitor ID,
      visitor's name, visitor's phone number, visitor's email, and any value of visitor custom attributes.

      The maximum length of a search string is 250 characters.
    example: 'Mary Hawkins'

  crm_forwarded:
    type: boolean
    description: Whether the CRM Export has already occurred or not.
    example: true

  summary_forwarded:
    type: boolean
    description: Whether the summary has already been forwarded.
    example: false

  visitor:
    type: object
    properties:
      href:
        type: string
        description: URL of the visitor's information.
        # yamllint disable rule:line-length
        example: >
          'https://api.glia.com/sites/def34343-s888-43ae-99e0-07a676e9a111/visitors/c2c9106e-v888-47b2-8db3-089fb49dc9a5'
        # yamllint enable rule:line-length

  input_source:
    type: string
    nullable: true
    description: >
      One of the engagement request sources:

      * `button_embed` - (_reactive_) Visitor started an engagement using the **Contact Operator** button.

      * `callout` - (_reactive_) Engagement was started by a business rule. For example, a business rule triggered a media selector, which the visitor then used to start the engagement.

      * `facebook` - (_reactive_) Visitor sent a message from Facebook Messenger.

      * `hotlink` - (_reactive_) Visitor started engagement using a hotlink.

      * `sdk` - (_reactive_) Engagement started through JS SDK, Android SDK, or iOS SDK.

      * `slack` - (_reactive_) Visitor sent a message from Slack.

      * `sms` - (_reactive_) Visitor sent an SMS message.

      * `tab` - (_reactive_) Visitor started the engagement through a web browser (using Glia Bubble).

      * `visitor_integrator` - (_reactive_) Engagement was started by a REST API call.

      * `whatsapp` - (_reactive_) Visitor sent a message from WhatsApp.

      * `null` - (_proactive_) Engagement was requested by an operator.
    enum:
      - button_embed
      - callout
      - facebook
      - hotlink
      - sdk
      - slack
      - sms
      - tab
      - visitor_integrator
      - whatsapp
      - null

  output_source:
    type: string
    nullable: true
    description: >
      One of the engagement request sources:

      * `button_embed` - (_reactive_) Visitor started an engagement using the **Contact Operator** button.

      * `callout` - (_reactive_) Engagement was started by a business rule. For example, a business rule triggered a media selector, which the visitor then used to start the engagement.

      * `external_call` - (_reactive_) **Deprecated**

      * `facebook` - (_reactive_) Visitor sent a message from Facebook Messenger.

      * `hotlink` - (_reactive_) Visitor started engagement using a hotlink.

      * `offline_phone` - (_reactive_) Visitor made a phone call.

      * `call_visualizer` - (_proactive_) Engagement was started by an operator who used Call Visualizer (embedded or
      Glia Hub) to connect with the visitor.

      * `glia_hub` - (_proactive_) Engagement was initiated by an operator who selected a visitor from the visitor list in Glia Hub.

      * `outbound_call` - (_proactive_) Operator called visitor's phone number.

      * `outbound_text` - (_proactive_) Operator sent an SMS message to the visitor's phone number.

      * `sdk` - (_reactive_) Engagement started through JS SDK, Android SDK, or iOS SDK.

      * `slack` - (_reactive_) Visitor sent a message from Slack.

      * `sms` - (_reactive_) Visitor sent an SMS message.

      * `tab` - (_reactive_) Visitor started the engagement through a web browser (using Glia Bubble).

      * `visitor_integrator` - (_reactive_) Engagement was started by a REST API call.

      * `whatsapp` - (_reactive_) Visitor sent a message from WhatsApp.

      * `null` - (_proactive_) Engagement was requested by an operator.
    enum:
      - button_embed
      - callout
      - external_call
      - facebook
      - hotlink
      - offline_phone
      - call_visualizer
      - glia_hub
      - outbound_call
      - outbound_text
      - sdk
      - slack
      - sms
      - tab
      - visitor_integrator
      - whatsapp
      - null

  chat_transcript:
    type: object
    properties:
      href:
        type: string
        description: URL of the engagement's transcript.
        example: >
          'https://api.glia.com/engagements/abc12121-e888-43ae-99e0-07a676e9a111/chat_transcript'

  leg_operator:
    type: object
    properties:
      id: &base_leg_operator
        type: string
        description: >
          ID of the user who was the host of the leg.
        example: 'ec317122-o888-4b43-996d-34a2ed3b76d8'
  leg_operator_in_search_result:
    type: object
    properties:
      id:
        <<: *base_leg_operator
        description: >
          ID of the user who was the host of the leg.


          When fetching engagement(s) of a specific user, the response will contain only the engagements where this
          user was a host operator in at least one engagement leg.

  operators:
    type: array
    description: >
      The list of users, including virtual assistants and external guests, who participated in the engagement with the visitor.
      The list is ordered chronologically by the engagement leg in which the user participated in.
    items:
      type: object
      properties:
        href:
          type: string
          description: URL of the user.
          example: 'https://api.glia.com/operators/ec317122-o888-4b43-996d-34a2ed3b76d8'
        picture:
          type: string
          description: URL of the user's picture.
        name:
          type: string
          description: Name of the user.
          example: Jordan Green
        type:
          type: string
          description: Type of the operator.
          enum:
            - human
            - virtual_assistant
            - external
        email:
          type: string
          description: Email of the user.
          example: jordan.green@example.com
        id:
          type: string
          description: ID of the user.
          example: 'abc12121-e888-43ae-99e0-07a676e9a111'

  queues:
    type: array
    description: >
      A list of queues that the visitor was enqueued in before the engagement started. This value is present in the following cases:
        * Reactive engagements.
        * Engagement transfers to a queue.
        * Outbound calls on behalf of a queue.
    items:
      type: object
      properties:
        id:
          type: string
          description: ID of the queue.
          example: 'f58d4671-q888-4e87-96dc-1d41027bebc5'
        name:
          type: string
          description: Name of the queue.
          example: 'Example queue'

  display_phone_numbers:
    type: array
    description: >
      A list of phone numbers that were used as display phone numbers to make calls to the visitors.
      The value is `null` in the case of inbound calls.
    items:
      type: string
      example: ['+1555123456']

  request_queues:
    type: array
    description: >
      The list of queues the visitor was enqueued in before this engagement leg was created. This value may be `null` in case of a proactive engagement request or a transfer made directly to an operator.
    items:
      type: object
      properties:
        id:
          type: string
          description: ID of the queue.
          example: 'f58d4671-q888-4e87-96dc-1d41027bebc5'
        name:
          type: string
          description: Name of the queue.
          example: 'Example queue'

  site:
    type: object
    properties:
      id:
        type: string
        description: ID of the site where the engagement leg took place.
        example: 'def34343-s888-43ae-99e0-07a676e9a111'

  ended_at:
    type: string
    description: |
      ISO-8601 timestamp when the engagement leg (or the engagement in the case of the last leg) was ended or when the engagement was transferred out.
    example: '2020-05-31T10:02:18Z'

  end_reason:
    type: string
    description: >
      The end reason of the engagement leg (or the engagement in the case of the last leg).

      * `error` - Engagement ended due to technical reasons.

      * `visitor_left` - Visitor left the engagement (e.g. navigated to another browser tab).

      * `operator_left`- Operator left the engagement.

      * `visitor_hung_up`- Visitor ended the engagement.

      * `operator_hung_up` - Operator ended the engagement.

      * `transferred_out`- Engagement was transferred to an external contact.

      * `visitor_authenticated`- Visitor logged in to your company's online application (e.g. online banking).

      * `visitor_unauthenticated`- Occurs when authentication status changes in other browser tabs/windows when using Direct ID Token. For example:
          * User logs out in one tab while engaged in another.
          * Session expires in inactive tabs.
          * User navigates away from authentication context.
          For more information, see [Direct ID Overview](https://docs.glia.com/glia-support/docs/overview-of-direct-id-authentication).

      * `visitor_not_reached`- Visitor did not answer the callback.

      * `external_operator_not_reached` - An attempt was made to transfer the engagement to an external
      contact but the contact did not answer the call.

      * `follow_up` - Operator scheduled a follow-up.

      * `engagement_timed_out ` - The engagement was automatically ended because it exceeded the
      maximum duration (7 days).
    enum:
      - error
      - visitor_left
      - operator_left
      - visitor_hung_up
      - operator_hung_up
      - transferred_out
      - visitor_authenticated
      - visitor_unauthenticated
      - visitor_not_reached
      - external_operator_not_reached
      - follow_up
      - engagement_timed_out

  offered_media_type:
    type: string
    description: Offered or requested media type for an engagement.
    enum:
      - text
      - audio
      - phone
      - video
    example: video

  accepted_media_type:
    type: string
    description: Accepted media type for an engagement.
    enum:
      - text
      - audio
      - phone
      - video
    example: audio

  highest_visitor_media_type:
    type: string
    description: Highest media type visitor used during this engagement leg.
    enum:
      - text
      - audio
      - video

  highest_operator_media_type:
    type: string
    description: Highest media type operator used during this engagement leg.
    enum:
      - text
      - audio
      - video

  guest_id:
    type: string
    description: Guest ID.
    example: 'ef74940e-1fd8-432c-964f-7f2d940fbd3a'

  guest_type:
    type: string
    description: Guest type. Currently only `operator` type is supported.
    enum:
      - operator

  guest_joined_at:
    description: |
      An ISO-8601 timestamp of when the guest joined the engagement leg.
    example: '2020-05-31T09:47:00Z'

  guest_left_at:
    description: |
      An ISO-8601 timestamp of when the guest left the engagement leg.
    example: '2020-05-31T09:48:00Z'

  transfer_request:
    description: Transfer request that initiated the engagement leg.
    type: object
    properties:
      message:
        type: string
        description: Transfer message of the engagement leg.
      created_at:
        type: string
        description: ISO-8601 timestamp of when the transfer request was created.

  visitor_survey_configured:
    type: boolean
    description: Whether a visitor survey was configured to show for the engagement.
    example: true

  operator_survey_configured:
    type: boolean
    description: Whether an operator survey was configured to show for the engagement.
    example: true

  manager_survey_configured:
    type: boolean
    description: Whether a manager survey (Cortex Interaction Analyzer) was configured for the engagement.
    example: true

  operator_surveys:
    type: array
    description: >
      A list of operator surveys on the engagement.
      Currently, only the last engagement leg includes an operator survey.
    items:
      type: object
      properties:
        status:
          type: string
          description: Status of the operator survey.
          enum:
            - none
            - skipped
            - timed_out
            - answered
            - pending
          example: 'none'
        wrapped_up_at:
          type: string
          description: >
            An ISO-8601 timestamp of when the survey was answered or timed out.
          example: '2020-05-31T09:48:00Z'
        leg_id:
          type: string
          description: Engagement leg ID.
          example: 'abc12121-c995-45ec-8e0f-5bf4d5e16a2e'

  audio_recording_outcome:
    type: string
    description: >
      Outcome of the engagement audio recording.

      * `recorded` - Engagement audio was recorded.

      * `stopped` - Engagement audio was recorded but recording was stopped.

      * `not_recorded` - Engagement audio was not recorded.

      * `not_applicable` - Engagement had no audio.
    enum:
      - recorded
      - stopped
      - not_recorded
      - not_applicable
    example: recorded

  recording_paused:
    type: boolean
    nullable: true
    description: Indicates whether recording was paused during the engagement. Value is set to `null` if no audio was used.
    example: true

  interaction_id:
    type: string
    description: Interaction ID.
    example: '0df26d40-0fbe-474d-a051-702cd687c3c8'

  heads_up_for_agents:
    type: string
    nullable: true
    description: Cortex AI generated summary of previous engagements of the returning visitor.
